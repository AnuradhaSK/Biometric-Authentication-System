/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import biometricsystem.Constants;
import biometricsystem.Character;
import biometricsystem.DBFunction;
import biometricsystem.Digraph;
import biometricsystem.DigraphBehave;
import biometricsystem.User;
import biometricsystem.VerifyHandler;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Anuradha
 */
public class SignInForm extends javax.swing.JFrame {
    private int phrasecount1=0;
    private int phrasecount2=0;
    
    private ArrayList<Character> phraseCharacters = null;
    private static ArrayList<ArrayList<Digraph>> finalSigninData= new ArrayList<ArrayList<Digraph>>();
    /**
     * Creates new form SignInForm
     */
    public SignInForm() {
        phraseCharacters= new ArrayList<Character>();
        
        initComponents();
        jLabel4.setText("'"+Constants.PHRASE+"'");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Sign in Form");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Username:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Login");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Please enter the given phrase correctly.");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Phrase:");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(46, 46, 46)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addComponent(jLabel1)))
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.display();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        char Char = evt.getKeyChar();
	if(evt.getKeyCode() == 8 || evt.getKeyCode() == 46){
	retry("Cannot Edit text or use Delete or Backspace.Retry again!");
	return;
	}
        else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        String username=jTextField1.getText();
        String phrase=jTextField2.getText();
        System.out.println(username);
        System.out.println(phrase);
        
        
        //compare with the load data
        //validate username and phrase if so
        if(validatephrase(phrase)){
            try {
                if(validateuser(username)){
                    finalSigninData.add(DigraphBehave.createDigraphs(Constants.PHRASE, phraseCharacters));
                    ArrayList<Double> signmeantimeArray = DigraphBehave.constructMeanList(finalSigninData);
                    for(int j = 0 ; j <signmeantimeArray .size(); j++){
                    System.out.println(signmeantimeArray .get(j));
                 }
                    //compare speeds
                    User user=new User(username);
                    VerifyHandler vf=new VerifyHandler();
                    if(vf.verifypattern(user,signmeantimeArray)){
                        finalSigninData= new ArrayList<ArrayList<Digraph>>();
                        JOptionPane.showMessageDialog(null, "Succesfull login!!");
                        this.setVisible(false);
                        dispose();
                        new LandingForm().display();
                        
                    }
                    else{
                        finalSigninData= new ArrayList<ArrayList<Digraph>>();
                        retry("Your key stroke pattern doesn't match with the username.Unautherized access");
                    }
                    
                }else{
                    retry("Enter a valid username");
                }
            } catch (SQLException ex) {
                Logger.getLogger(SignInForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(SignInForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            retry("Invalid phrase is entered.Retry");
        }
       
        }
        else if (phrasecount1 <= Constants.PHRASE.length()) {
                Character chr=new Character(Char);
                chr.setPressedTime(evt.getWhen());
                System.out.println(Char + "  press " + evt.getWhen());
                //add to array
                phraseCharacters.add(chr);
                phrasecount1++;
        }
           
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        char Char = evt.getKeyChar();
        if(Char== Constants.PHRASE.charAt(phrasecount2))
	{
            //add to th array
            phraseCharacters.get(phrasecount2).setReleasedTime(evt.getWhen());
            System.out.println(Char + " release " + evt.getWhen());
            phrasecount2++;
				
	}
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String username=jTextField1.getText();
        String phrase=jTextField2.getText();
        System.out.println(username);
        System.out.println(phrase);
        
        
        //compare with the load data
        //validate username and phrase if so
        if(validatephrase(phrase)){
            try {
                if(validateuser(username)){
                    finalSigninData.add(DigraphBehave.createDigraphs(Constants.PHRASE, phraseCharacters));
                    ArrayList<Double> signmeantimeArray = DigraphBehave.constructMeanList(finalSigninData);
                    for(int j = 0 ; j <signmeantimeArray .size(); j++){
                    System.out.println(signmeantimeArray .get(j));
                 }
                    //compare speeds
                    User user=new User(username);
                    VerifyHandler vf=new VerifyHandler();
                    if(vf.verifypattern(user,signmeantimeArray)){
                        finalSigninData= new ArrayList<ArrayList<Digraph>>();
                        JOptionPane.showMessageDialog(null, "Succesfull login!!");
                        this.setVisible(false);
                        dispose();
                        new LandingForm().display();
                        
                    }
                    else{
                        finalSigninData= new ArrayList<ArrayList<Digraph>>();
                        retry("Your key stroke pattern doesn't match with the username.Unautherized access");
                    }
                    
                }else{
                    retry("Enter a valid username");
                }
            } catch (SQLException ex) {
                Logger.getLogger(SignInForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(SignInForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            retry("Invalid phrase is entered.Retry");
        }
       
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new LandingForm().display();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void display() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignInForm().setVisible(true);
            }
        });
    }
    
    private void retry(String message){
	JOptionPane.showConfirmDialog(null,
		message, "Error",
		JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
	setVisible(false);
	dispose();
	this.display();
	}
    public boolean validatephrase(String phrase){
        if (phrase==null||
                phrase.trim().length()==0||
                (!phrase.equals(Constants.PHRASE))){
            return false;
        }
        else{
        return true;}
       
    }
     public boolean validateuser(String username) throws SQLException, ClassNotFoundException{
        if (username==null||
                username.trim().length()==0||
                DBFunction.validateUsername(username)){
            return false;
        }
        else{
        return true;}
       
    } 
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
